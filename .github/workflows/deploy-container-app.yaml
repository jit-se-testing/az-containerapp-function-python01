name: Build and Deploy to Azure Container Apps

# NOTE: The Azure Container Registry (ACR) is created in a separate resource group (ACR_RESOURCE_GROUP).
# If you need to reference the ACR resource group in az commands, use the ${{ secrets.ACR_RESOURCE_GROUP }} secret.

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
      - 'function-app/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Azure subscription
        run: |
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build, tag, and push image to Azure Container Registry
        env:
          ACR_NAME: ${{ secrets.ACR_NAME }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build and push the image
          docker build -t $ACR_NAME.azurecr.io/k8s-demo:$IMAGE_TAG -t $ACR_NAME.azurecr.io/k8s-demo:latest ./app
          docker push $ACR_NAME.azurecr.io/k8s-demo:$IMAGE_TAG
          docker push $ACR_NAME.azurecr.io/k8s-demo:latest

      - name: Create Container Apps Environment
        run: |
          # Create the Container Apps Environment if it doesn't exist
          az containerapp env show \
            --name k8s-demo-environment \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --output none 2>/dev/null || \
          az containerapp env create \
            --name k8s-demo-environment \
            --resource-group ${{ secrets.RESOURCE_GROUP }} \
            --location ${{ secrets.LOCATION }} \
            --logs-workspace-id ${{ secrets.LOG_ANALYTICS_WORKSPACE_ID }}

      - name: Deploy application to Container Apps
        env:
          ACR_NAME: ${{ secrets.ACR_NAME }}
          ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
          ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
          LOCATION: ${{ secrets.LOCATION }}
        run: |
          # Create or update the Container App
          az containerapp create \
            --name k8s-demo-app \
            --resource-group $RESOURCE_GROUP \
            --environment k8s-demo-environment \
            --image $ACR_NAME.azurecr.io/k8s-demo:latest \
            --target-port 5000 \
            --ingress external \
            --registry-server $ACR_NAME.azurecr.io \
            --registry-username $ACR_USERNAME \
            --registry-password $ACR_PASSWORD \
            --cpu 0.5 \
            --memory 1Gi \
            --min-replicas 1 \
            --max-replicas 3 \
            --env-vars API_KEY=dummy_key_container_app_12345 \
            --output none 2>/dev/null || \
          az containerapp update \
            --name k8s-demo-app \
            --resource-group $RESOURCE_GROUP \
            --image $ACR_NAME.azurecr.io/k8s-demo:latest \
            --output none

      - name: Deploy Jit Agent (if credentials provided)
        if: secrets.JIT_CLIENT_ID != ''
        env:
          JIT_CLIENT_ID: ${{ secrets.JIT_CLIENT_ID }}
          JIT_CLIENT_SECRET: ${{ secrets.JIT_CLIENT_SECRET }}
        run: |
          # Note: Jit integration for Container Apps would be implemented here
          # This is a placeholder for the Jit agent deployment
          echo "Jit agent deployment would be implemented here"
          echo "Using JIT_CLIENT_ID: $JIT_CLIENT_ID" 